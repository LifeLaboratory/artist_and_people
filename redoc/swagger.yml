swagger: "2.0"
info:
  title: "API"
  description: "test api"
  version: "1.0.0"
host: "hackuniversity.crabdance.com"
basePath: "/api/v1"
schemes:
  - "https"
tags:
- name: "auth"
  description: ""
paths:
  /auth:
    post:
      tags:
      - "auth"
      summary: ""
      description: "auth hello POST"
      operationId: "auth"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "AuthRequest"
        required: true
        schema:
          $ref: "#/definitions/AuthRequest"
      AuthResponses:
        200:
          description: "Successfully"
          schema:
            $ref: "#/definitions/AuthResponse"
        400:
          description: &invalid_AuthRequest_body "Bad AuthRequest, AuthRequest body is not valid"
        500:
          description: &internal_server_error "Internal server error"
      x-code-samples:
        - lang: 'cURL'
          source: |
            curl \
            -X POST \
            -H "Content-Type: application/json" \
            -d '{"key": "value"}' \
            -i \
            http://hackuniversity.crabdance.com/api/v1/hello
  /reg:
    post:
      tags:
      - "reg"
      summary: ""
      description: "re hello POST"
      operationId: "reg"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "AuthRequest"
        required: true
        schema:
          $ref: "#/definitions/RegRequest"
      AuthResponses:
        200:
          description: "Successfully"
          schema:
            $ref: "#/definitions/RegResponse"
        400:
          description: &invalid_AuthRequest_body "Bad AuthRequest, AuthRequest body is not valid"
        500:
          description: &internal_server_error "Internal server error"
      x-code-samples:
        - lang: 'cURL'
          source: |
            curl \
            -X POST \
            -H "Content-Type: application/json" \
            -d '{"key": "value"}' \
            -i \
            http://hackuniversity.crabdance.com/api/v1/hello
  /concert:
    get:
      tags:
      - "concert"
      summary: ""
      description: "concert"
      operationId: "auth"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      AuthResponses:
        200:
          description: "Successfully"
          schema:
            $ref: "#/definitions/ConcertResponse"
        400:
          description: &invalid_AuthRequest_body "Bad AuthRequest, AuthRequest body is not valid"
        500:
          description: &internal_server_error "Internal server error"
      x-code-samples:
        - lang: 'cURL'
          source: |
            curl \
            -X POST \
            -H "Content-Type: application/json" \
            -d '{"key": "value"}' \
            -i \
            http://hackuniversity.crabdance.com/api/v1/hello
  /fire:
    post:
      tags:
      - "fire"
      summary: ""
      description: "fire"
      operationId: "fire"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "FirePostRequest"
        required: true
        schema:
          $ref: "#/definitions/FirePostRequest"
      AuthResponses:
        200:
          description: "Successfully"
          schema:
            $ref: "#/definitions/FirePostResponse"
        400:
          description: &invalid_AuthRequest_body "Bad AuthRequest, AuthRequest body is not valid"
        500:
          description: &internal_server_error "Internal server error"
      x-code-samples:
        - lang: 'cURL'
          source: |
            curl \
            -X POST \
            -H "Content-Type: application/json" \
            -d '{"key": "value"}' \
            -i \
            http://hackuniversity.crabdance.com/api/v1/hello
    get:
      tags:
      - "fire"
      summary: ""
      description: "fire"
      operationId: "fire"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "FireGetRequest"
        required: true
        schema:
          $ref: "#/definitions/FireGetRequest"
      AuthResponses:
        200:
          description: "Successfully"
          schema:
            $ref: "#/definitions/FireGetResponse"
        400:
          description: &invalid_AuthRequest_body "Bad AuthRequest, AuthRequest body is not valid"
        500:
          description: &internal_server_error "Internal server error"
      x-code-samples:
        - lang: 'cURL'
          source: |
            curl \
            -X POST \
            -H "Content-Type: application/json" \
            -d '{"key": "value"}' \
            -i \
            http://hackuniversity.crabdance.com/api/v1/hello
  /event:
    post:
      tags:
      - "event"
      summary: ""
      description: "event"
      operationId: "event"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "EventPostRequest"
        required: true
        schema:
          $ref: "#/definitions/EventPostRequest"
      AuthResponses:
        200:
          description: "Successfully"
          schema:
            $ref: "#/definitions/EventPostResponse"
        400:
          description: &invalid_AuthRequest_body "Bad AuthRequest, AuthRequest body is not valid"
        500:
          description: &internal_server_error "Internal server error"
      x-code-samples:
        - lang: 'cURL'
          source: |
            curl \
            -X POST \
            -H "Content-Type: application/json" \
            -d '{"key": "value"}' \
            -i \
            http://hackuniversity.crabdance.com/api/v1/hello
    get:
      tags:
      - "event"
      summary: ""
      description: "event"
      operationId: "event"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "EventGetRequest"
        required: true
        schema:
          $ref: "#/definitions/EventGetRequest"
      AuthResponses:
        200:
          description: "Successfully"
          schema:
            $ref: "#/definitions/EventGetResponse"
        400:
          description: &invalid_AuthRequest_body "Bad AuthRequest, AuthRequest body is not valid"
        500:
          description: &internal_server_error "Internal server error"
      x-code-samples:
        - lang: 'cURL'
          source: |
            curl \
            -X POST \
            -H "Content-Type: application/json" \
            -d '{"key": "value"}' \
            -i \
            http://hackuniversity.crabdance.com/api/v1/hello
  /questions:
    post:
      tags:
      - "questions"
      summary: ""
      description: "questions"
      operationId: "questions"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "QuestionPostRequest"
        required: true
        schema:
          $ref: "#/definitions/QuestionPostRequest"
      AuthResponses:
        200:
          description: "Successfully"
          schema:
            $ref: "#/definitions/QuestionPostResponse"
        400:
          description: &invalid_AuthRequest_body "Bad AuthRequest, AuthRequest body is not valid"
        500:
          description: &internal_server_error "Internal server error"
      x-code-samples:
        - lang: 'cURL'
          source: |
            curl \
            -X POST \
            -H "Content-Type: application/json" \
            -d '{"key": "value"}' \
            -i \
            http://hackuniversity.crabdance.com/api/v1/hello
    get:
      tags:
      - "questions"
      summary: ""
      description: "questions"
      operationId: "questions"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "QuestionGetRequest"
        required: true
        schema:
          $ref: "#/definitions/QuestionGetRequest"
      AuthResponses:
        200:
          description: "Successfully"
          schema:
            $ref: "#/definitions/QuestionGetResponse"
        400:
          description: &invalid_AuthRequest_body "Bad AuthRequest, AuthRequest body is not valid"
        500:
          description: &internal_server_error "Internal server error"
      x-code-samples:
        - lang: 'cURL'
          source: |
            curl \
            -X POST \
            -H "Content-Type: application/json" \
            -d '{"key": "value"}' \
            -i \
            http://hackuniversity.crabdance.com/api/v1/hello
  /time:
    get:
      tags:
      - "time"
      summary: ""
      description: "time"
      operationId: "time"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "TimeGetRequest"
        required: true
        schema:
          $ref: "#/definitions/TimeGetRequest"
      AuthResponses:
        200:
          description: "Successfully"
          schema:
            $ref: "#/definitions/TimeGetResponse"
        400:
          description: &invalid_AuthRequest_body "Bad AuthRequest, AuthRequest body is not valid"
        500:
          description: &internal_server_error "Internal server error"
      x-code-samples:
        - lang: 'cURL'
          source: |
            curl \
            -X POST \
            -H "Content-Type: application/json" \
            -d '{"key": "value"}' \
            -i \
            http://hackuniversity.crabdance.com/api/v1/hello
definitions:
  AuthRequest:
    type: "object"
    properties:
      login:
        type: "string"
      password:
        type: "string"
  AuthResponse:
    type: "object"
    properties:
      answer:
        type: integer
      data:
        type: object
        properties:
          session:
            type: "string"
  RegRequest:
    type: "object"
    properties:
      login:
        type: "string"
      password:
        type: "string"
      name:
        type: "string"
      information:
        type: "string"
        description: "статус user - пользователь, artist - артист"
  RegResponse:
    type: "object"
    properties:
      answer:
        type: integer
      data:
        type: object
        properties:
          session:
            type: "string"
  ConcertResponse:
    type: "object"
    properties:
      answer:
        type: integer
      data:
        type: list
        properties:
          id_concert:
            type: integer
          name:
            type: "string"
          datetime:
            type: "string"
          place:
            type: "string"
          id_artist:
            type: integer
          organizer:
            type: "string"
          age:
            type: integer
  FirePostRequest:
    type: "object"
    properties:
      session:
        type: string
      id_concert:
        type: integer
  FireGetRequest:
    type: "object"
    properties:
      session:
        type: string
      id_concert:
        type: integer
  FireGetResponse:
    type: "object"
    properties:
      answer:
        type: integer
      data:
        type: list
        properties:
          id_fire:
            type: integer
          id_user:
            type: integer
          id_concert:
            type: integer
          qty:
            type: integer
  EventPostRequest:
    type: "object"
    properties:
      description:
        type: string
      id_concert:
        type: integer
  EventGetRequest:
    type: "object"
    properties:
      id_concert:
        type: integer
  EventGetResponse:
    type: "object"
    properties:
      answer:
        type: integer
      data:
        type: list
        properties:
          id_event:
            type: integer
          id_concert:
            type: integer
          description:
            type: integer
          members:
            type: integer
  QuestionsPostRequest:
    type: "object"
    properties:
      question:
        type: string
      answers:
        type: list
  QuestionsGetResponse:
    type: "object"
    properties:
      answer:
        type: integer
      data:
        type: list
        properties:
          id_quest:
            type: integer
          quest:
            type: integer
          answers:
            type: list
          members:
            type: integer
  TimeGetRequest:
    type: "object"
    properties:
      id_concert:
        type: integer
  TimeGetResponse:
    type: "object"
    properties:
      answer:
        type: integer
      data:
        type: object
        properties:
          time:
            type: string